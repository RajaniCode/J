Command Prompt 1

Change directory to "src" folder in the folder WebServices

javac "com\sample\endpoint\HelloWorldPublisher.java"

java com.sample.endpoint.HelloWorldPublisher

Publishing . . .
Published to endpoint: http://localhost:9999/ws/hello
Access the WSDL generated by the deployed web service via URL:
http://localhost:9999/ws/hello?wsdl

GitBash 1
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

MINGW64 /
$ cd "C:\R\Working\Java\JAX-WS\Example\WebServices\src"

MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServices/src
$ javac "com\sample\endpoint\HelloWorldPublisher.java"

MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServices/src
$ java com.sample.endpoint.HelloWorldPublisher
Publishing . . .
Published to endpoint: http://localhost:9999/ws/hello
Access the WSDL generated by the deployed web service via URL:
http://localhost:9999/ws/hello?wsdl
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

You can test the deployed web service by accessing the generated WSDL (Web Services Description Language) document via this URL: 
http://localhost:9999/ws/hello?wsdl


Command Prompt 2

Change directory to "src" folder in the folder WebServices

javac "com\sample\client\HelloWorldClient.java"

java com.sample.client.HelloWorldClient

Output:
Hello World JAX-WS sample

GitBash 2
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
MINGW64 /
$ cd "C:\R\Working\Java\JAX-WS\Example\WebServices\src"

MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServices/src
$ javac "com\sample\client\HelloWorldClient.java"

MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServices/src
$ java com.sample.client.HelloWorldClient
Hello World JAX-WS sample
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


Command Prompt 2

Change directory to the src folder in the Stub viz. WebServicesStub

wsimport -keep http://localhost:9999/ws/hello?wsdl

GitBash 2
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


MINGW64 /
$ cd "C:\R\Working\Java\JAX-WS\Example\WebServicesStub\src"

MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServicesStub/src
$ wsimport -keep http://localhost:9999/ws/hello?wsdl
parsing WSDL...



Generating code...


Compiling code...


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


Command Prompt 2

javac "com\sample\client\HelloWorldClient.java"

java com.sample.client.HelloWorldClient

Output:
Hello World JAX-WS Java Web Service Client via wsimport

GitBash 2
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServicesStub/src
$ javac "com\sample\client\HelloWorldClient.java"

MINGW64 /c/R/Working/Java/JAX-WS/Example/WebServicesStub/src
$ java com.sample.client.HelloWorldClient
Hello World JAX-WS Java Web Service Client via wsimport
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


Command Prompt 2

Change directory to the working folder viz. Example

client.rb

Output:
Hello World JAX-WS Ruby Web Service Client

GitBash 2
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
MINGW64 /
$ cd "C:\R\Working\Java\JAX-WS\Example"

MINGW64 /c/R/Working/Java/JAX-WS/Example
$ gem --version
2.6.3

MINGW64 /c/R/Working/Java/JAX-WS/Example
$ gem install savon
Successfully installed mini_portile2-2.0.0
Nokogiri is built with the packaged libraries: libxml2-2.9.2, libxslt-1.1.28, zlib-1.2.8, libiconv-1.14.
Successfully installed nokogiri-1.6.7.2-x64-mingw32
Successfully installed rack-1.6.4
Successfully installed httpi-2.4.1
Successfully installed wasabi-3.5.0
Successfully installed nori-2.6.0
Successfully installed builder-3.2.2
Successfully installed gyoku-1.3.1
Successfully installed akami-1.3.1
Successfully installed savon-2.11.1
Parsing documentation for mini_portile2-2.0.0
Installing ri documentation for mini_portile2-2.0.0
Parsing documentation for nokogiri-1.6.7.2-x64-mingw32
Installing ri documentation for nokogiri-1.6.7.2-x64-mingw32
Parsing documentation for rack-1.6.4
Installing ri documentation for rack-1.6.4
Parsing documentation for httpi-2.4.1
Installing ri documentation for httpi-2.4.1
Parsing documentation for wasabi-3.5.0
Installing ri documentation for wasabi-3.5.0
Parsing documentation for nori-2.6.0
Installing ri documentation for nori-2.6.0
Parsing documentation for builder-3.2.2
Installing ri documentation for builder-3.2.2
Parsing documentation for gyoku-1.3.1
Installing ri documentation for gyoku-1.3.1
Parsing documentation for akami-1.3.1
Installing ri documentation for akami-1.3.1
Parsing documentation for savon-2.11.1
Installing ri documentation for savon-2.11.1
Done installing documentation for mini_portile2, nokogiri, rack, httpi, wasabi, nori, builder, gyoku, akami, savon after 24 seconds
10 gems installed

MINGW64 /c/R/Working/Java/JAX-WS/Example
$ ruby client.rb
Hello World JAX-WS Ruby Web Service Client
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$