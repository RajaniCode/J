# Git Bash 1

MINGW64 ~
$ cd "E:\Working\Java\JAX-WS\Example\WebServices\src"

MINGW64 /e/Working/Java/JAX-WS/Example/WebServices/src
$ javac "com\sample\endpoint\HelloWorldPublisher.java"

MINGW64 /e/Working/Java/JAX-WS/Example/WebServices/src
$ java com.sample.endpoint.HelloWorldPublisher
Publishing . . .
Published to endpoint: http://localhost:9999/ws/hello
Access the WSDL generated by the deployed web service via URL:
http://localhost:9999/ws/hello?wsdl




# Git Bash 2

MINGW64 ~
$ cd "E:\Working\Java\JAX-WS\Example\WebServices\src"

MINGW64 /e/Working/Java/JAX-WS/Example/WebServices/src
$ javac "com\sample\client\HelloWorldClient.java"

MINGW64 /e/Working/Java/JAX-WS/Example/WebServices/src
$ java com.sample.client.HelloWorldClient
Hello World JAX-WS Java Web Service Client

MINGW64 /e/Working/Java/JAX-WS/Example/WebServices/src
$ cd "E:\Working\Java\JAX-WS\Example"

MINGW64 /e/Working/Java/JAX-WS/Example
$ ruby --version
ruby 2.2.4p230 (2015-12-16 revision 53155) [i386-mingw32]

MINGW64 /e/Working/Java/JAX-WS/Example
$ gem --version
2.4.5.1

MINGW64 /e/Working/Java/JAX-WS/Example
$ gem install savon
Successfully installed gyoku-1.3.1
Successfully installed akami-1.3.1
Successfully installed socksify-1.7.0
Successfully installed httpi-2.4.2
Successfully installed wasabi-3.5.0
Successfully installed nori-2.6.0
Successfully installed savon-2.11.1
Parsing documentation for gyoku-1.3.1
Installing ri documentation for gyoku-1.3.1
Parsing documentation for akami-1.3.1
Installing ri documentation for akami-1.3.1
Parsing documentation for socksify-1.7.0
Installing ri documentation for socksify-1.7.0
Parsing documentation for httpi-2.4.2
Installing ri documentation for httpi-2.4.2
Parsing documentation for wasabi-3.5.0
Installing ri documentation for wasabi-3.5.0
Parsing documentation for nori-2.6.0
Installing ri documentation for nori-2.6.0
Parsing documentation for savon-2.11.1
Installing ri documentation for savon-2.11.1
Done installing documentation for gyoku, akami, socksify, httpi, wasabi, nori, savon after 12 seconds
7 gems installed

MINGW64 /e/Working/Java/JAX-WS/Example
$ ruby client.rb
Hello World JAX-WS Ruby Web Service Client

MINGW64 /e/Working/Java/JAX-WS/Example
$ python --version
Python 2.7.11

MINGW64 /e/Working/Java/JAX-WS/Example
$ pip --version
pip 8.1.2 from c:\python27\lib\site-packages (python 2.7)

MINGW64 /e/Working/Java/JAX-WS/Example
$ pip install suds
Collecting suds
  Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x0000000003BEA978>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /simple/suds/
  Downloading suds-0.4.tar.gz (104kB)
Building wheels for collected packages: suds
  Running setup.py bdist_wheel for suds: started
  Running setup.py bdist_wheel for suds: finished with status 'done'
  Stored in directory: C:\Users\Aspire\AppData\Local\pip\Cache\wheels\4f\90\87\1220588a9d369a78d03e2f2b47fc655462ba884b834c6e5766
Successfully built suds
Installing collected packages: suds
Successfully installed suds-0.4

MINGW64 /e/Working/Java/JAX-WS/Example
$ python client.py
Hello World JAX-WS Python Web Service Client

MINGW64 /e/Working/Java/JAX-WS/Example
$ cd Node.js-Windows

MINGW64 /e/Working/Java/JAX-WS/Example/Node.js-Windows
$ node --version
v4.4.7

MINGW64 /e/Working/Java/JAX-WS/Example/Node.js-Windows
$ npm --version
2.15.8

MINGW64 /e/Working/Java/JAX-WS/Example/Node.js-Windows
$ npm i soap

> ursa@0.9.4 install E:\Working\Java\JAX-WS\Example\Node.js-Windows\node_modules\soap\node_modules\ursa
> node-gyp rebuild


E:\Working\Java\JAX-WS\Example\Node.js-Windows\node_modules\soap\node_modules\ursa>if not defined npm_config_node_gyp (node "C:\Program Files\nodejs\node_modules\npm\bin\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js" rebuild )  else (node "" rebuild )
Building the projects in this solution one at a time. To enable parallel build, please add the "/m" switch.
MSBUILD : error MSB3428: Could not load the Visual C++ component "VCBuild.exe". To fix this, 1) install the .NET Framework 2.0 SDK, 2) install Microsoft Visual Studio 2005 or 3) add the location of the component to the system path if it is installed elsewhere.  [E:\Working\Java\JAX-WS\Example\Node.js-Windows\node_modules\soap\node_modules\ursa\build\binding.sln]
gyp ERR! build error
gyp ERR! stack Error: `C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onExit (C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\lib\build.js:276:23)
gyp ERR! stack     at emitTwo (events.js:87:13)
gyp ERR! stack     at ChildProcess.emit (events.js:172:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)
gyp ERR! System Windows_NT 6.3.9600
gyp ERR! command "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js" "rebuild"
gyp ERR! cwd E:\Working\Java\JAX-WS\Example\Node.js-Windows\node_modules\soap\node_modules\ursa
gyp ERR! node -v v4.4.7
gyp ERR! node-gyp -v v3.3.1
gyp ERR! not ok
npm WARN optional dep failed, continuing ursa@0.9.4
soap@0.16.0 node_modules\soap
+-- compress@0.99.0
+-- optional@0.1.3
+-- debug@0.7.4
+-- sax@1.2.1
+-- selectn@0.9.6
+-- node-uuid@1.4.7
+-- strip-bom@0.3.1 (is-utf8@0.2.1, first-chunk-stream@0.1.0)
+-- ejs@2.3.4
+-- lodash@3.10.1
+-- xml-crypto@0.8.4 (xpath.js@1.0.6, xmldom@0.1.19)
+-- request@2.74.0 (oauth-sign@0.8.2, aws-sign2@0.6.0, tunnel-agent@0.4.3, forever-agent@0.6.1, is-typedarray@1.0.0, caseless@0.11.0, stringstream@0.0.5, aws4@1.4.1, isstream@0.1.2, json-stringify-safe@5.0.1, extend@3.0.0, tough-cookie@2.3.1, qs@6.2.1, combined-stream@1.0.5, mime-types@2.1.11, form-data@1.0.0-rc4, hawk@3.1.3, http-signature@1.1.1, har-validator@2.0.6, bl@1.1.2)

MINGW64 /e/Working/Java/JAX-WS/Example/Node.js-Windows
$ node client.js
Hello World JAX-WS Node.js Web Service Client

Aspire@Acer MINGW64 /
$ java -version
java version "1.8.0_102"
Java(TM) SE Runtime Environment (build 1.8.0_102-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)

Aspire@Acer MINGW64 /
$ php --version
PHP 7.0.9 (cli) (built: Jul 20 2016 11:08:23) ( ZTS )
Copyright (c) 1997-2016 The PHP Group
Zend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies

Aspire@Acer MINGW64 /
$ cd "E:\Working\Java\JAX-WS\Example\PHP"

Aspire@Acer MINGW64 /e/Working/Java/JAX-WS/Example/PHP
$ php client.php
Hello World JAX-WS PHP Web Service Client

Aspire@Acer MINGW64 /
$ java -version
java version "1.8.0_102"
Java(TM) SE Runtime Environment (build 1.8.0_102-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)

Aspire@Acer MINGW64 /
$ csc -help
Microsoft (R) Visual C# Compiler version 1.3.1.60621
Copyright (C) Microsoft Corporation. All rights reserved.


                              Visual C# Compiler Options

                        - OUTPUT FILES -
 /out:<file>                   Specify output file name (default: base name of
                               file with main class or first file)
 /target:exe                   Build a console executable (default) (Short
                               form: /t:exe)
 /target:winexe                Build a Windows executable (Short form:
                               /t:winexe)
 /target:library               Build a library (Short form: /t:library)
 /target:module                Build a module that can be added to another
                               assembly (Short form: /t:module)
 /target:appcontainerexe       Build an Appcontainer executable (Short form:
                               /t:appcontainerexe)
 /target:winmdobj              Build a Windows Runtime intermediate file that
                               is consumed by WinMDExp (Short form: /t:winmdobj)
 /doc:<file>                   XML Documentation file to generate
 /platform:<string>            Limit which platforms this code can run on: x86,
                               Itanium, x64, arm, anycpu32bitpreferred, or
                               anycpu. The default is anycpu.

                        - INPUT FILES -
 /recurse:<wildcard>           Include all files in the current directory and
                               subdirectories according to the wildcard
                               specifications
 /reference:<alias>=<file>     Reference metadata from the specified assembly
                               file using the given alias (Short form: /r)
 /reference:<file list>        Reference metadata from the specified assembly
                               files (Short form: /r)
 /addmodule:<file list>        Link the specified modules into this assembly
 /link:<file list>             Embed metadata from the specified interop
                               assembly files (Short form: /l)
 /analyzer:<file list>         Run the analyzers from this assembly
                               (Short form: /a)
 /additionalfile:<file list>   Additional files that don't directly affect code
                               generation but may be used by analyzers for producing
                               errors or warnings.

                        - RESOURCES -
 /win32res:<file>              Specify a Win32 resource file (.res)
 /win32icon:<file>             Use this icon for the output
 /win32manifest:<file>         Specify a Win32 manifest file (.xml)
 /nowin32manifest              Do not include the default Win32 manifest
 /resource:<resinfo>           Embed the specified resource (Short form: /res)
 /linkresource:<resinfo>       Link the specified resource to this assembly
                               (Short form: /linkres) Where the resinfo format
                               is <file>[,<string name>[,public|private]]

                        - CODE GENERATION -
 /debug[+|-]                   Emit debugging information
 /debug:{full|pdbonly|portable}
                               Specify debugging type ('full' is default, and
                               enables attaching a debugger to a running
                               program. 'portable' is a cross-platform format)
 /optimize[+|-]                Enable optimizations (Short form: /o)
 /deterministic                Produce a deterministic assembly
                               (including module version GUID and timestamp)

                        - ERRORS AND WARNINGS -
 /warnaserror[+|-]             Report all warnings as errors
 /warnaserror[+|-]:<warn list> Report specific warnings as errors
 /warn:<n>                     Set warning level (0-4) (Short form: /w)
 /nowarn:<warn list>           Disable specific warning messages
 /ruleset:<file>               Specify a ruleset file that disables specific
                               diagnostics.
 /errorlog:<file>              Specify a file to log all compiler and analyzer
                               diagnostics.
 /reportanalyzer               Report additional analyzer information, such as
                               execution time.

                        - LANGUAGE -
 /checked[+|-]                 Generate overflow checks
 /unsafe[+|-]                  Allow 'unsafe' code
 /define:<symbol list>         Define conditional compilation symbol(s) (Short
                               form: /d)
 /langversion:<string>         Specify language version mode: ISO-1, ISO-2, 3,
                               4, 5, 6, or Default

                        - SECURITY -
 /delaysign[+|-]               Delay-sign the assembly using only the public
                               portion of the strong name key
 /publicsign[+|-]              Public-sign the assembly using only the public
                               portion of the strong name key
 /keyfile:<file>               Specify a strong name key file
 /keycontainer:<string>        Specify a strong name key container
 /highentropyva[+|-]           Enable high-entropy ASLR

                        - MISCELLANEOUS -
 @<file>                       Read response file for more options
 /help                         Display this usage message (Short form: /?)
 /nologo                       Suppress compiler copyright message
 /noconfig                     Do not auto include CSC.RSP file
 /parallel[+|-]                Concurrent build.

                        - ADVANCED -
 /baseaddress:<address>        Base address for the library to be built
 /bugreport:<file>             Create a 'Bug Report' file
 /checksumalgorithm:<alg>      Specify algorithm for calculating source file
                               checksum stored in PDB. Supported values are:
                               SHA1 (default) or SHA256.
 /codepage:<n>                 Specify the codepage to use when opening source
                               files
 /utf8output                   Output compiler messages in UTF-8 encoding
 /main:<type>                  Specify the type that contains the entry point
                               (ignore all other possible entry points) (Short
                               form: /m)
 /fullpaths                    Compiler generates fully qualified paths
 /filealign:<n>                Specify the alignment used for output file
                               sections
 /pathmap:<K1>=<V1>,<K2>=<V2>,...
                               Specify a mapping for source path names output by
                               the compiler.
 /pdb:<file>                   Specify debug information file name (default:
                               output file name with .pdb extension)
 /errorendlocation             Output line and column of the end location of
                               each error
 /preferreduilang              Specify the preferred output language name.
 /nostdlib[+|-]                Do not reference standard library (mscorlib.dll)
 /subsystemversion:<string>    Specify subsystem version of this assembly
 /lib:<file list>              Specify additional directories to search in for
                               references
 /errorreport:<string>         Specify how to handle internal compiler errors:
                               prompt, send, queue, or none. The default is
                               queue.
 /appconfig:<file>             Specify an application configuration file
                               containing assembly binding settings
 /moduleassemblyname:<string>  Name of the assembly which this module will be
                               a part of
 /modulename:<string>          Specify the name of the source module

Aspire@Acer MINGW64 /
$ cd "E:\Working\Java\JAX-WS\Example\WCF"

Aspire@Acer MINGW64 /e/Working/Java/JAX-WS/Example/WCF
$ svcutil /config:Client.exe.config http://localhost:9999/ws/hello?wsdl
Microsoft (R) Service Model Metadata Tool
[Microsoft (R) Windows (R) Communication Foundation, Version 4.6.1590.0]
Copyright (c) Microsoft Corporation.  All rights reserved.

Attempting to download metadata from 'http://localhost:9999/ws/hello?wsdl' using WS-Metadata Exchange or DISCO.
Generating files...
E:\Working\Java\JAX-WS\Example\WCF\HelloWorldImplService.cs
E:\Working\Java\JAX-WS\Example\WCF\Client.exe.config

Aspire@Acer MINGW64 /e/Working/Java/JAX-WS/Example/WCF
$ touch Client.cs

Aspire@Acer MINGW64 /e/Working/Java/JAX-WS/Example/WCF
$ csc /target:library HelloWorldImplService.cs
Microsoft (R) Visual C# Compiler version 1.3.1.60621
Copyright (C) Microsoft Corporation. All rights reserved.


Aspire@Acer MINGW64 /e/Working/Java/JAX-WS/Example/WCF
$ csc Client.cs /reference:HelloWorldImplService.dll
Microsoft (R) Visual C# Compiler version 1.3.1.60621
Copyright (C) Microsoft Corporation. All rights reserved.


Aspire@Acer MINGW64 /e/Working/Java/JAX-WS/Example/WCF
$ ./Client
Hello World JAX-WS WCF Client
